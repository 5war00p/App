on:
  workflow_call:
    inputs:
      ENV:
        description: The environment to deploy. Must be one of ('staging', 'production', 'ad-hoc').
        required: true
        type: string
      PR_NUMBER:
        description: For ad-hoc builds, the number of the PR associated with the build
        required: false
        type: string

# TODO: workflow-level concurrency?

jobs:
  # TODO: add a a validate job

  # TODO: move concurrency here?
  build:
    if: inputs.ENV != 'production'
    uses: Expensify/App/.github/workflows/buildAndroid.yml@main
    secrets: inherit
    with:
      ENV: ${{ inputs.ENV == 'staging' && 'release' || 'ad-hoc' }}

  deployStaging:
    if: inputs.ENV == 'staging'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true

      - name: Download Android aab
        uses: actions/download-artifact@v3
        with:
          name: android-release-${{ github.ref }}.aab

      - name: Decrypt Fastlane json key
        run: cd android/app && gpg --quiet --batch --yes --decrypt --passphrase="$LARGE_SECRET_PASSPHRASE" --output android-fastlane-json-key.json android-fastlane-json-key.json.gpg
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      - name: Upload beta to Google Play
        run: bundle exec fastlane android upload_beta

  deployProduction:
    if: inputs.ENV == 'production'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true

      - name: Decrypt Fastlane json key
        run: cd android/app && gpg --quiet --batch --yes --decrypt --passphrase="$LARGE_SECRET_PASSPHRASE" --output android-fastlane-json-key.json android-fastlane-json-key.json.gpg
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      - name: Set version in ENV
        run: echo "VERSION_CODE=$(grep -o 'versionCode\s\+[0-9]\+' android/app/build.gradle | awk '{ print $2 }')" >> "$GITHUB_ENV"

      - name: Release Google Play build to production
        run: bundle exec fastlane android release_production

  deployAdHoc:
    if: inputs.ENV == 'ad-hoc'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true

      - name: Configure AWS Credentials
        uses: Expensify/App/.github/actions/composite/configureAwsCredentials@main
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Download Android apk
        uses: actions/download-artifact@v3
        with:
          name: android-release-${{ github.ref }}.apk

      - name: Upload test build to S3
        run: bundle exec fastlane android upload_s3
        env:
          S3_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET: ad-hoc-expensify-cash
          S3_REGION: us-east-1
          PULL_REQUEST_NUMBER: ${{ inputs.PR_NUMBER }}
